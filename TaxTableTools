public class TaxTableTools {
    /** This class searches the 'search' table with a search argument and
     returns the corresponding value in the 'value' table. Variable
     'nEntries' has the number of entries in each table.
     */
    private int[] search = {0, 20000, 50000, 100000, Integer.MAX_VALUE};
    private double[] value = {0.0, 0.10, 0.20, 0.30, 0.40};
    private int nEntries;

    // Default constructor
    public TaxTableTools() {
        nEntries = search.length;  // Set the length of the search table
    }

    // Overloaded constructor for Task B
    public TaxTableTools(int[] searchTable, double[] valueTable) {
        search = searchTable;
        value = valueTable;
        nEntries = searchTable.length;
    }

    // Setter method for Task A
    public void setTables(int[] searchTable, double[] valueTable) {
        search = searchTable;
        value = valueTable;
        nEntries = searchTable.length;
    }

    public double getValue(int searchArgument) {
        double result;
        boolean keepLooking;
        int i;

        result = 0.0;
        keepLooking = true;
        i = 0;

        while ((i < nEntries) && keepLooking) {
            if (searchArgument <= search[i]) {
                result = value[i];
                keepLooking = false;
            }
            else {
                ++i;
            }
        }
        return result;
    }
}
